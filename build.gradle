// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: 'config/keystore.gradle'
buildscript {
    ext.kotlin_version = '1.3.72'
    ext.supportLibraryVersion = '26.1.0'
    ext.playServicesVersion = '11.8.0'
    ext.rxAndroidVersion = '2.0.2'
    ext.rxJavaVersion = '2.1.9'

    repositories {
        google()
        jcenter()
        mavenCentral()
        /*maven {
            url 'https://maven.fabric.io/public'
        }*/
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:$kotlin_version"
        classpath 'com.google.gms:google-services:4.3.4'
        //classpath 'io.fabric.tools:gradle:1.28.0'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.3.0'
        classpath 'com.jakewharton:butterknife-gradle-plugin:10.2.1'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.5'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
        classpath 'org.ajoberstar:gradle-git:1.7.2'
        classpath "org.jacoco:org.jacoco.core:0.8.5"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
    }
}
subprojects {
    repositories {
        google()
        jcenter()
        mavenLocal()
        maven { url 'https://jitpack.io' }
    }

    version = '4.1.0'
    group = 'com.journeyapps'

    ext.androidTargetSdk = 28
    ext.zxingCore = 'com.google.zxing:core:3.4.0'
}
project.ext {
    minSdkVersion = 16
    compileSdkVersion = 30
    buildToolsVersion = '30.0.0'

    googleVersions = [
            glide                 : '4.11.0',
            material              : '1.1.0',
    ]

    androidXVersions = [
            annotation            : '1.1.0',
            appCompat             : '1.1.0',
            browser               : '1.2.0',
    ]

    okioVersion = '1.17.5'
    jodaVersion = '2.10.6'
}
task clean(type: Delete) {
    delete rootProject.buildDir
}
try {
    def grgit = Grgit.open(dir: '.')
    def lastCommit = grgit.head()

    project.ext.versionNum = grgit.log(includes:['HEAD']).size()
    project.ext.versionName = grgit.describe()
    project.ext.versionDate = lastCommit.getDate()
    if (project.ext.versionName == null) {
        project.ext.versionName = 'DEV'
    }
} catch (Exception ignored) {
    project.ext.versionNum = 0
    project.ext.versionName = 'DEV'
    project.ext.versionDate = new Date()
}